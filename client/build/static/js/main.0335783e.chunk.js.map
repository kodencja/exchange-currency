{"version":3,"sources":["reportWebVitals.js","index.js","components/Footer.jsx","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Footer","onModalOpen","className","href","type","onClick","e","CurrForm","lazy","ModalComp","ModalContext","React","createContext","useState","modalIsOpen","setModalIsOpen","valueModalContext","useMemo","fallback","Provider","value"],"mappings":"gLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,mGCOee,MArBf,YAAkC,IAAhBC,EAAe,EAAfA,YAChB,OACE,yBAAQC,UAAU,eAAlB,UACE,mBAAGC,KAAK,kCAAR,SACE,wBAAQC,KAAK,OAAOF,UAAU,0BAA9B,iCAIF,wBACEE,KAAK,SACLF,UAAU,eACVG,QAAS,SAACC,GACRL,GAAY,IAJhB,2BCPAM,EAAWC,gBAAK,kBAAM,sDACtBC,EAAYD,gBAAK,kBAAM,uDAEhBE,EAAeC,IAAMC,gBAgCnBf,IA9Bf,WACE,MAAsCgB,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAoBC,mBAAQ,WAChC,MAAO,CACLH,cACAC,oBAED,CAACD,IAEJ,OACE,sBAAKZ,UAAU,MAAf,UACE,iCACE,wBAAQA,UAAU,QAAlB,uCACA,qBAAKA,UAAU,eAAf,SACE,cAAC,WAAD,CAAUgB,SAAU,2CAApB,SACE,cAACX,EAAD,WAIN,cAAC,EAAD,CAAQN,YAAac,IACrB,cAAC,WAAD,CAAUG,SAAU,2CAApB,SACE,cAACR,EAAaS,SAAd,CAAuBC,MAAOJ,EAA9B,SACE,cAACP,EAAD,c","file":"static/js/main.0335783e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\n\r\nfunction Footer({ onModalOpen }) {\r\n  return (\r\n    <footer className=\"down-buttons\">\r\n      <a href=\"https://codencja.herokuapp.com/\">\r\n        <button type=\"link\" className=\"btn-down home-page-link\">\r\n          Back to Home Page\r\n        </button>\r\n      </a>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-down\"\r\n        onClick={(e) => {\r\n          onModalOpen(true);\r\n        }}\r\n      >\r\n        Code info\r\n      </button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useMemo, lazy, Suspense } from \"react\";\nimport Footer from \"./components/Footer\";\n\nconst CurrForm = lazy(() => import(\"./components/CurrForm\"));\nconst ModalComp = lazy(() => import(\"./components/ModalComp\"));\n\nexport const ModalContext = React.createContext();\n\nfunction App() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const valueModalContext = useMemo(() => {\n    return {\n      modalIsOpen,\n      setModalIsOpen,\n    };\n  }, [modalIsOpen]);\n\n  return (\n    <div className=\"App\">\n      <main>\n        <header className=\"title\">LET'S CHECK EXCHANGE RATE</header>\n        <div className=\"section-form\">\n          <Suspense fallback={<p>Loading...</p>}>\n            <CurrForm />\n          </Suspense>\n        </div>\n      </main>\n      <Footer onModalOpen={setModalIsOpen} />\n      <Suspense fallback={<p>Loading...</p>}>\n        <ModalContext.Provider value={valueModalContext}>\n          <ModalComp />\n        </ModalContext.Provider>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}