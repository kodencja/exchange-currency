{"version":3,"sources":["customHooks/useCurrencyEx.js","components/CurrForm.jsx"],"names":["reducer","state","action","type","loading","error","post","feedback","targetName","targetValue","currFrom","currTo","FinalResponse","lazy","currencyNamesFrom","currencyNamesTo","map","el","i","initState","amount","CurrForm","children","urlExchangeRate","urlCountries","useReducer","dispatch","getExchangeRate","fromCurrency","toCurrency","a","options","method","headers","params","urlAddress","axios","get","feedbackRate","data","success","inputCorrect","errors","currFromCheck","incorrect","amountCheck","Error","getCountries","countriesData","currToCheck","convertCurrency","Promise","resolve","reject","dataFeedbackCountries","countriesList","fitCountries","dataFeedbackEx","convertedAmount","exchRate","toFixed","res","result","date","countries","message","useCurrencyEx","useState","stateToResponse","setStateToResponse","inputRef","useRef","addToInputRef","useCallback","current","includes","push","useEffect","focus","handleKeyDown","e","key","inputIndex","findIndex","id","target","length","preventDefault","handleSubmit","event","console","log","disabled","innerHTML","handleInputChange","name","value","handleSwitch","currencyList1","useMemo","index","currencyList2","className","htmlFor","aria-label","defaultValue","min","max","ref","onKeyDown","onChange","onClick","fallback","submitState"],"mappings":"iNAGMA,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BACFF,GADL,IAEEG,SAAS,EACTC,MAAO,KACPC,KAAMJ,EAAOK,WAEjB,IAAK,QACH,OAAO,2BACFN,GADL,IAEEG,SAAS,EACTE,KAAM,GACND,MAAOH,EAAOG,QAElB,IAAK,UACH,OAAO,2BACFJ,GADL,IAEEG,SAAS,EACTE,KAAM,GACND,MAAO,OAGX,IAAK,QACH,OAAO,2BACFJ,GADL,kBAEGC,EAAOM,WAAaN,EAAOO,cAGhC,IAAK,SACH,OAAO,2BACFR,GADL,IAEES,SAAUT,EAAMU,OAChBA,OAAQV,EAAMS,WAElB,QACE,OAAOT,I,eC5BPW,EAAgBC,gBAAK,kBAAM,gCAE3BC,EAAoB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAkBD,EAAkBE,KAAI,SAACC,EAAIC,GACjD,OAAU,IAANA,EAAgBJ,EAAkBI,EAAI,GAC3B,IAANA,EAAgBJ,EAAkBI,EAAI,GACnCD,KAGRE,EAAY,CAChBf,SAAS,EACTC,MAAO,GACPC,KAAM,GACNI,SAAU,MACVC,OAAQ,MACRS,OAAQ,GAgMKC,UA1Lf,YAAgC,EAAZC,SAAa,IAC/B,EDxB2B,SAACC,EAAiBC,EAAcL,GAS3D,MAA0BM,qBAAWzB,EAASmB,GAA9C,mBAAOlB,EAAP,KAAcyB,EAAd,KAGMC,EAAe,uCAAG,WAAOC,EAAcC,EAAYT,GAAjC,mBAAAU,EAAA,sEAGdC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAE,eAAgB,kCAC3BC,OAAQ,CACNC,WAAYZ,EACZK,eACAC,aACAT,WAVgB,SAaOgB,IAAMC,IAAI,iBAAkBN,GAbnC,WAeY,KAF1BO,EAbc,QAeLC,KAAKC,UACiB,IAAnCF,EAAaC,KAAKE,aAhBA,uBAkBZC,EACJJ,EAAaC,KAAKI,cAAcC,UAChC,IACAN,EAAaC,KAAKM,YAAYD,UAC1B,IAAIE,MAAMJ,GAtBE,YAwBY,IAA9BJ,EAAaC,KAAKC,UACiB,IAAnCF,EAAaC,KAAKE,aAzBA,uBA2BZ,IAAIK,MAAMR,EAAaC,KAAKlC,OA3BhB,iCA6BbiC,EAAaC,MA7BA,wCA+Bd,IAAIO,MAAJ,iCACsBlB,EADtB,gBAC0CC,EAD1C,qBA/Bc,0DAAH,0DAqCfkB,EAAY,uCAAG,WAAOlB,GAAP,mBAAAC,EAAA,sEAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAE,eAAgB,kCAC3BC,OAAQ,CAAEC,WAAW,GAAD,OAAKX,EAAL,YAAqBK,GAAcA,eALxC,SAOMO,IAAMC,IAAI,kBAAmBN,GAPnC,UAOXxB,EAPW,OAQXyC,EAAgBzC,EAASgC,MAEH,IAA1BhC,EAASgC,KAAKC,UACiB,IAA/BjC,EAASgC,KAAKE,aAXC,uBAaT,IAAIK,MAAMvC,EAASgC,KAAKU,YAAYL,WAb3B,YAeW,IAA1BrC,EAASgC,KAAKC,UACiB,IAA/BjC,EAASgC,KAAKE,aAhBC,uBAkBT,IAAIK,MAAMvC,EAASgC,KAAKlC,OAlBf,iCAoBV2C,GApBU,wCAsBX,IAAIF,MAAJ,wCAC6BjB,EAD7B,6BAtBW,0DAAH,sDAmElB,MAAO,CAAE5B,QAAOyB,WAAUwB,gBAvCF,SAACtB,EAAcC,EAAYT,GACjD,OAAO,IAAI+B,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAvB,EAAA,+EAEqBiB,EAAalB,GAFlC,WAGuB,KADhCyB,EAFS,QAGWd,QAHX,wBAIPe,EAAgBD,EAAsBE,aAJ/B,SAKgB7B,EAC3BC,EACAC,EACAT,GARW,UAKPqC,EALO,OAUPC,GAAmBtC,EAASqC,EAAeE,UAAUC,QAAQ,IACpC,IAA3BH,EAAejB,QAXN,iBAYLqB,EAAM,CACVC,OAAQJ,EACRK,KAAMN,EAAeM,KACrBC,UAAWT,EACXlD,MAAO,MAETqB,EAAS,CAAEvB,KAAM,UAAWI,SAAUsD,IACtCT,IAnBW,8BAqBL,IAAIN,MAAM,wBAA0BW,EAAepD,OArB9C,sCAwBP,IAAIyC,MACR,wBAA0BQ,EAAsBjD,OAzBrC,0DA6BfqB,EAAS,CACPvB,KAAM,QACNE,MAAO,KAAM4D,UAEfb,IAjCe,0DAAZ,2DCtDoCc,CAJvB,qCACH,4CAMjB/C,GAHMlB,EAAR,EAAQA,MAAOyB,EAAf,EAAeA,SAAUwB,EAAzB,EAAyBA,gBAKzB,EAA8CiB,mBAASlE,GAAvD,mBAAOmE,EAAP,KAAwBC,EAAxB,KAEMC,EAAWC,iBAAO,IAEhB5D,EAA6CV,EAA7CU,OAAQD,EAAqCT,EAArCS,SAAUU,EAA2BnB,EAA3BmB,OAAQhB,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MAErCmE,EAAgBC,uBAAY,SAACxD,GAC7BA,IAAOqD,EAASI,QAAQC,SAAS1D,IACnCqD,EAASI,QAAQE,KAAK3D,KAEvB,IAEH4D,qBAAU,WACRP,EAASI,QAAQ,GAAGI,UACnB,IAGHD,qBAAU,WACRR,EAAmBpE,KAClB,CAACA,EAAMG,UAGV,IAAM2E,EAAgB,SAACC,GACrB,GAAc,UAAVA,EAAEC,IAAiB,CAErB,IAAMC,EAAaZ,EAASI,QAAQS,WAClC,SAAClE,GAAD,OAAQA,EAAGmE,KAAOJ,EAAEK,OAAOD,MAIzBF,EAAaZ,EAASI,QAAQY,OAAS,IACzCN,EAAEO,iBACFjB,EAASI,QAAQQ,EAAa,GAAGJ,WAKjCU,EAAY,uCAAG,WAAOC,GAAP,SAAA3D,EAAA,6DACnB4D,QAAQC,IAAI,mBAEZrB,EAASI,QAAQJ,EAASI,QAAQY,OAAS,GAAGM,UAAW,EACzDtB,EAASI,QAAQJ,EAASI,QAAQY,OAAS,GAAGO,UAAY,UAC1DnE,EAAS,CAAEvB,KAAM,YACjBsF,EAAMF,iBANa,SAQbrC,EAAgBxC,EAAUC,EAAQS,GARrB,OAWnBkD,EAASI,QAAQJ,EAASI,QAAQY,OAAS,GAAGM,UAAW,EACzDtB,EAASI,QAAQJ,EAASI,QAAQY,OAAS,GAAGO,UAAY,QAZvC,2CAAH,sDAeZC,EAAoBrB,uBACxB,SAACO,GACCtD,EAAS,CACPvB,KAAM,QACNK,WAAYwE,EAAEK,OAAOU,KACrBtF,YAAauE,EAAEK,OAAOW,UAG1B,CAACrF,EAAQD,EAAUU,IAGf6E,EAAexB,uBACnB,SAACgB,GACCC,QAAQC,IAAI,mBACZF,EAAMF,iBACN7D,EAAS,CAAEvB,KAAM,aAEnB,CAACQ,EAAQD,IAGLwF,EAAgBC,mBAAQ,WAC5B,OAAIrF,EAAkBwE,OAAS,GACV,UAAIxE,GAAmBE,KAAI,SAAC+E,EAAMK,GACnD,OACE,wBAAQJ,MAAOD,EAAf,SACGA,GADuBK,QAS/B,IAEGC,EAAgBF,mBAAQ,WAC5B,OAAIpF,EAAgBuE,OAAS,GACR,YAAIvE,GAAiBC,KAAI,SAAC+E,EAAMK,GACjD,OACE,wBAAoBJ,MAAOD,EAA3B,SACGA,GADUK,QASlB,IAEH,OACE,sBAAKE,UAAU,qBAAf,UACE,uBAAMlB,GAAG,gBAAgBkB,UAAU,GAAnC,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,uBAAOC,QAAQ,SAAf,oBACA,8BACE,uBACEpG,KAAK,SACLmG,UAAU,eACVP,KAAK,SACLS,aAAW,SACXpB,GAAG,SACHqB,aAAa,IACbC,IAAI,IACJC,IAAI,UACJC,IAAKpC,EACLqC,UAAW9B,EACX+B,SAAUhB,SAIhB,sBAAKQ,UAAU,sCAAf,UACE,uBAAOC,QAAQ,WAAf,kBACA,wBACER,KAAK,WACLX,GAAG,WACHkB,UAAU,+BACVN,MAAOtF,EACPkG,IAAKpC,EACLqC,UAAW9B,EACX+B,SAAUhB,EAPZ,SASGI,OAGL,sBAAKI,UAAU,sCAAf,UACE,uBAAOC,QAAQ,SAAf,gBACA,wBACER,KAAK,SACLX,GAAG,SACHkB,UAAU,+BACVN,MAAOrF,EACPiG,IAAKpC,EACLqC,UAAW9B,EACX+B,SAAUhB,EAPZ,SASGO,UAIP,qBAAKC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,wBAAQA,UAAU,0BAA0BS,QAASd,EAArD,oBAGA,wBACE9F,KAAK,SACLmG,UAAU,4BACVM,IAAKpC,EACLuC,QAASvB,EAJX,2BAWN,cAAC,WAAD,CAAUwB,SAAU,2CAApB,UACe,IAAZ5G,GAA8B,OAAVC,EACnB,sBAAMiG,UAAU,SAAhB,wBAEA,cAAC1F,EAAD,CAAeqG,YAAa7C","file":"static/js/5.ad993505.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        post: action.feedback,\r\n      };\r\n    case \"ERROR\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        post: {},\r\n        error: action.error,\r\n      };\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        post: {},\r\n        error: null,\r\n      };\r\n\r\n    case \"INPUT\":\r\n      return {\r\n        ...state,\r\n        [action.targetName]: action.targetValue,\r\n      };\r\n\r\n    case \"SWITCH\":\r\n      return {\r\n        ...state,\r\n        currFrom: state.currTo,\r\n        currTo: state.currFrom,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useCurrencyEx = (urlExchangeRate, urlCountries, initState) => {\r\n  // the 'dispatch' function accepts object with the following properties:\r\n  // type: it accepts 5 values:\r\n  // 1 INPUT - to handle input onChenge event)\r\n  // 2) SWITCH - to swap currency 'to' to 'from' and vice versa\r\n  // 3) LOADING - when the server is wating for the request response\r\n  // 4) SUCCESS - if the requests was success\r\n  // 5) ERROR - when the request failed\r\n\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n  // ASYNC with PROMISE\r\n  const getExchangeRate = async (fromCurrency, toCurrency, amount) => {\r\n    // fetch data from the API where euro is the base currency\r\n    try {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: { \"content-type\": \"application/json;charset=utf-8\" },\r\n        params: {\r\n          urlAddress: urlExchangeRate,\r\n          fromCurrency,\r\n          toCurrency,\r\n          amount,\r\n        },\r\n      };\r\n      const feedbackRate = await axios.get(\"/api/exchange?\", options);\r\n      if (\r\n        feedbackRate.data.success === false &&\r\n        feedbackRate.data.inputCorrect === false\r\n      ) {\r\n        const errors =\r\n          feedbackRate.data.currFromCheck.incorrect +\r\n          \" \" +\r\n          feedbackRate.data.amountCheck.incorrect;\r\n        throw new Error(errors);\r\n      } else if (\r\n        feedbackRate.data.success === false &&\r\n        feedbackRate.data.inputCorrect === true\r\n      ) {\r\n        throw new Error(feedbackRate.data.error);\r\n      }\r\n      return feedbackRate.data;\r\n    } catch (error) {\r\n      throw new Error(\r\n        `Unable to get currency ${fromCurrency} and ${toCurrency} - ${error}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const getCountries = async (toCurrency) => {\r\n    try {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: { \"content-type\": \"application/json;charset=utf-8\" },\r\n        params: { urlAddress: `${urlCountries}/${toCurrency}`, toCurrency },\r\n      };\r\n      const feedback = await axios.get(\"/api/countries?\", options);\r\n      const countriesData = feedback.data;\r\n      if (\r\n        feedback.data.success === false &&\r\n        feedback.data.inputCorrect === false\r\n      ) {\r\n        throw new Error(feedback.data.currToCheck.incorrect);\r\n      } else if (\r\n        feedback.data.success === false &&\r\n        feedback.data.inputCorrect === true\r\n      ) {\r\n        throw new Error(feedback.data.error);\r\n      }\r\n      return countriesData;\r\n    } catch (error) {\r\n      throw new Error(\r\n        `Unable to get countries using ${toCurrency} currency. ${error}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const convertCurrency = (fromCurrency, toCurrency, amount) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const dataFeedbackCountries = await getCountries(toCurrency);\r\n        if (dataFeedbackCountries.success === true) {\r\n          const countriesList = dataFeedbackCountries.fitCountries;\r\n          const dataFeedbackEx = await getExchangeRate(\r\n            fromCurrency,\r\n            toCurrency,\r\n            amount\r\n          );\r\n          const convertedAmount = (amount * dataFeedbackEx.exchRate).toFixed(2);\r\n          if (dataFeedbackEx.success === true) {\r\n            const res = {\r\n              result: convertedAmount,\r\n              date: dataFeedbackEx.date,\r\n              countries: countriesList,\r\n              error: null,\r\n            };\r\n            dispatch({ type: \"SUCCESS\", feedback: res });\r\n            resolve();\r\n          } else {\r\n            throw new Error(\"Something was wrong! \" + dataFeedbackEx.error);\r\n          }\r\n        } else {\r\n          throw new Error(\r\n            \"Something was wrong! \" + dataFeedbackCountries.error\r\n          );\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          error: error.message,\r\n        });\r\n        resolve();\r\n      }\r\n    });\r\n  };\r\n\r\n  return { state, dispatch, convertCurrency };\r\n};\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n  useMemo,\r\n  lazy,\r\n  Suspense,\r\n  useEffect,\r\n} from \"react\";\r\nimport { useCurrencyEx } from \"../customHooks/useCurrencyEx\";\r\nimport \"../main.css\";\r\n\r\nconst FinalResponse = lazy(() => import(\"./FinalResponse\"));\r\n\r\nconst currencyNamesFrom = [\r\n  \"USD\",\r\n  \"EUR\",\r\n  \"GBP\",\r\n  \"CHF\",\r\n  \"PLN\",\r\n  \"CZK\",\r\n  \"DKK\",\r\n  \"HUF\",\r\n  \"RON\",\r\n  \"SEK\",\r\n  \"NOK\",\r\n  \"ISK\",\r\n  \"HRK\",\r\n  \"RUB\",\r\n  \"TRY\",\r\n  \"BRL\",\r\n  \"AUD\",\r\n  \"CAD\",\r\n  \"CNY\",\r\n  \"INR\",\r\n  \"ILS\",\r\n  \"MXN\",\r\n  \"NZD\",\r\n  \"PHP\",\r\n  \"SGD\",\r\n  \"ZAR\",\r\n  \"IDR\",\r\n  \"JPY\",\r\n  \"THB\",\r\n  \"BGN\",\r\n  \"KRW\",\r\n  \"MYR\",\r\n];\r\n\r\nconst currencyNamesTo = currencyNamesFrom.map((el, i) => {\r\n  if (i === 0) return currencyNamesFrom[i + 1];\r\n  else if (i === 1) return currencyNamesFrom[i - 1];\r\n  else return el;\r\n});\r\n\r\nconst initState = {\r\n  loading: false,\r\n  error: \"\",\r\n  post: {},\r\n  currFrom: \"USD\",\r\n  currTo: \"EUR\",\r\n  amount: 1,\r\n};\r\n\r\nconst urlExchangeRate = \"https://api.ratesapi.io/api/latest\";\r\nconst urlCountries = \"https://restcountries.eu/rest/v2/currency\";\r\n\r\nfunction CurrForm({ children }) {\r\n  const { state, dispatch, convertCurrency } = useCurrencyEx(\r\n    urlExchangeRate,\r\n    urlCountries,\r\n    initState\r\n  );\r\n  const [stateToResponse, setStateToResponse] = useState(state);\r\n\r\n  const inputRef = useRef([]);\r\n\r\n  const { currTo, currFrom, amount, loading, error } = state;\r\n\r\n  const addToInputRef = useCallback((el) => {\r\n    if (el && !inputRef.current.includes(el)) {\r\n      inputRef.current.push(el);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    inputRef.current[0].focus();\r\n  }, []);\r\n\r\n  // call and set finalResponse from FinalResponse.jsx\r\n  useEffect(() => {\r\n    setStateToResponse(state);\r\n  }, [state.loading]);\r\n\r\n  // handle focus on input fields while using the 'Enter' key\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // find index of the current input\r\n      const inputIndex = inputRef.current.findIndex(\r\n        (el) => el.id === e.target.id\r\n      );\r\n\r\n      // direct me to the next input in an array 'inputRef.current' if the current focus is not on the 'check / submit' button\r\n      if (inputIndex < inputRef.current.length - 1) {\r\n        e.preventDefault();\r\n        inputRef.current[inputIndex + 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    console.log(\"handleSubmit Fn\");\r\n    // disable the check button to prevent client from double clicks\r\n    inputRef.current[inputRef.current.length - 1].disabled = true;\r\n    inputRef.current[inputRef.current.length - 1].innerHTML = \"Wait...\";\r\n    dispatch({ type: \"LOADING\" });\r\n    event.preventDefault();\r\n\r\n    await convertCurrency(currFrom, currTo, amount);\r\n\r\n    // after the 'convertCurrency' promise will be resolved enable the check button\r\n    inputRef.current[inputRef.current.length - 1].disabled = false;\r\n    inputRef.current[inputRef.current.length - 1].innerHTML = \"Check\";\r\n  };\r\n\r\n  const handleInputChange = useCallback(\r\n    (e) => {\r\n      dispatch({\r\n        type: \"INPUT\",\r\n        targetName: e.target.name,\r\n        targetValue: e.target.value,\r\n      });\r\n    },\r\n    [currTo, currFrom, amount]\r\n  );\r\n\r\n  const handleSwitch = useCallback(\r\n    (event) => {\r\n      console.log(\"handleSwitch Fn\");\r\n      event.preventDefault();\r\n      dispatch({ type: \"SWITCH\" });\r\n    },\r\n    [currTo, currFrom]\r\n  );\r\n\r\n  const currencyList1 = useMemo(() => {\r\n    if (currencyNamesFrom.length > 0) {\r\n      const currNames1 = [...currencyNamesFrom].map((name, index) => {\r\n        return (\r\n          <option value={name} key={index}>\r\n            {name}\r\n          </option>\r\n        );\r\n      });\r\n      return currNames1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const currencyList2 = useMemo(() => {\r\n    if (currencyNamesTo.length > 0) {\r\n      const currNames2 = [...currencyNamesTo].map((name, index) => {\r\n        return (\r\n          <option key={index} value={name}>\r\n            {name}\r\n          </option>\r\n        );\r\n      });\r\n      return currNames2;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container currency\">\r\n      <form id=\"currency-form\" className=\"\">\r\n        <div className=\"row center\">\r\n          <div className=\"col col-sm-3 col-sm-marg form-group\">\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            <div>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"amount\"\r\n                aria-label=\"Amount\"\r\n                id=\"amount\"\r\n                defaultValue=\"1\"\r\n                min=\"1\"\r\n                max=\"9999999\"\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col col-sm-3 col-sm-marg form-group\">\r\n            <label htmlFor=\"currFrom\">From</label>\r\n            <select\r\n              name=\"currFrom\"\r\n              id=\"currFrom\"\r\n              className=\"form-control form-control-lg\"\r\n              value={currFrom}\r\n              ref={addToInputRef}\r\n              onKeyDown={handleKeyDown}\r\n              onChange={handleInputChange}\r\n            >\r\n              {currencyList1}\r\n            </select>\r\n          </div>\r\n          <div className=\"col col-sm-3 col-sm-marg form-group\">\r\n            <label htmlFor=\"currTo\">To</label>\r\n            <select\r\n              name=\"currTo\"\r\n              id=\"currTo\"\r\n              className=\"form-control form-control-lg\"\r\n              value={currTo}\r\n              ref={addToInputRef}\r\n              onKeyDown={handleKeyDown}\r\n              onChange={handleInputChange}\r\n            >\r\n              {currencyList2}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row center\">\r\n          <div className=\"buttons col\">\r\n            <button className=\"btn btn-info btn-switch\" onClick={handleSwitch}>\r\n              switch\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success btn-check\"\r\n              ref={addToInputRef}\r\n              onClick={handleSubmit}\r\n            >\r\n              Check\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        {loading === true && error === null ? (\r\n          <span className=\"answer\">loading...</span>\r\n        ) : (\r\n          <FinalResponse submitState={stateToResponse} />\r\n        )}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrForm;\r\n"],"sourceRoot":""}